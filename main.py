import telebot
from telebot import types
from openpyxl import load_workbook

Token = '7104291510:AAE5Neqcop9-fAo3LcFkb1AmA0y0NBPxu24'
bot = telebot.TeleBot(Token)
fn = 'tablich.xlsx'
wb = load_workbook(fn)
ws = wb['data']

# ws['A1'] = 'Qq'
# print(len(ws['A1'].value))
@bot.message_handler(content_types=['text'])
def main(message):  # –∏–º—è
    if message.text == '/start':
        bot.send_message(message.from_user.id, f'–ù–∞—à —á–∞—Ç-–±–æ—Ç –≤ Telegram –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –º–æ–ª–æ–¥—ã—Ö —Å–µ–º–µ–π-—Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∂–µ–ª–∞—é—Ç –ø–æ–ª—É—á–∏—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º –±—Ä–∞—á–Ω–æ-—Å–µ–º–µ–π–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏–πü´Ç'
        f'‚Äç‚úçÔ∏è–ü—Ä–æ–π–¥–∏—Ç–µ –ø–µ—Ä–≤–∏—á–Ω–æ–µ –∞–Ω–∫–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –ø–æ–º–æ—â—å. '
        f'üë©‚Äç‚öïÔ∏è–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤ –≥–æ—Ç–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤–∞—Å –Ω–∞ –ø—É—Ç–∏ –∫ –∑–¥–æ—Ä–æ–≤—ã–º –∏ —Å—á–∞—Å—Ç–ª–∏–≤—ã–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º.')
        bot.send_message(message.from_user.id, f'–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –ø–æ–ª–Ω–æ–µ –∏–º—è')
        bot.register_next_step_handler(message, old)
    else:
        bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–ø—Ä–æ—Å')


def old(message):  # –≤–æ–∑–≤—Ä–∞—Å—Ç
    # –ø–æ–∏—Å–∫ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –Ω–æ–º–µ—Ä–∞ –¥–ª—è exel
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    if ws['A2'].value == None:
        ws['A2'] = message.text
    else:
        s = 2
        while True:
            if ws['A' + str(s)].value == None:
                break
            s += 1
        ws['A' + str(s)] = message.text
        ws['A1'] = str(s)
    wb.save(fn)
    wb.close()
    #
    bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç?')
    bot.register_next_step_handler(message, gender)


def gender(message):  # –ø–æ–ª
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['B' + ws['A1'].value] = str(message.text)
    wb.save(fn)
    wb.close()
    #
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ú—É–∂—Å–∫–æ–π')
    btn2 = types.KeyboardButton('–ñ–µ–Ω—Å–∫–∏–π')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, '–í–∞—à –ø–æ–ª?', reply_markup=markup)
    bot.register_next_step_handler(message, family)


def family(message):  # —Å–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
    if message.text.lower() == '–º—É–∂—Å–∫–æ–π' or message.text.lower() == '–∂–µ–Ω—Å–∫–∏–π':
        # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
        fn = 'tablich.xlsx'
        wb = load_workbook(fn)
        ws = wb['data']
        ws['C' + ws['A1'].value] = message.text
        wb.save(fn)
        wb.close()
        #
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–°–æ—Å—Ç–æ—é –≤ –±—Ä–∞–∫–µ')
        btn2 = types.KeyboardButton('–ü–ª–∞–Ω–∏—Ä—É—é –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '–í—ã —Å–æ—Å—Ç–æ–∏—Ç–µ –∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫?', reply_markup=markup)
        bot.register_next_step_handler(message, children)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–î–∞')
        btn2 = types.KeyboardButton('–ù–µ—Ç')
        bot.send_message(message.chat.id, '–í–∞—à –ø–æ–ª?', reply_markup=markup)
        bot.register_next_step_handler(message, family)


def children(message):  # –¥–µ—Ç–∏
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['D' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '—Å–æ—Å—Ç–æ—é –≤ –±—Ä–∞–∫–µ':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–ö–∞–∫ –¥–æ–ª–≥–æ –≤—ã —Å–æ—Å—Ç–æ–∏—Ç–µ –≤ –±—Ä–∞–∫–µ?', reply_markup=markup)
        bot.register_next_step_handler(message, family_old)
    elif message.text.lower() == '–ø–ª–∞–Ω–∏—Ä—É—é –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫':
        # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
        fn = 'tablich.xlsx'
        wb = load_workbook(fn)
        ws = wb['data']
        ws['E' + ws['A1'].value] = '-'
        wb.save(fn)
        wb.close()
        #
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–î–∞')
        btn2 = types.KeyboardButton('–ù–µ—Ç')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –¥–µ—Ç–∏?', reply_markup=markup)
        bot.register_next_step_handler(message, education)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–°–æ—Å—Ç–æ—é –≤ –±—Ä–∞–∫–µ')
        btn2 = types.KeyboardButton('–ü–ª–∞–Ω–∏—Ä—É—é –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '–í—ã —Å–æ—Å—Ç–æ–∏—Ç–µ –∏–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫?', reply_markup=markup)
        bot.register_next_step_handler(message, children)


def family_old(message):  # —Å—Ä–æ–∫ –æ—Ç–Ω–æ—à–µ–Ω–∏–π
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['E' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–î–∞')
    btn2 = types.KeyboardButton('–ù–µ—Ç')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, '–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –¥–µ—Ç–∏?', reply_markup=markup)
    bot.register_next_step_handler(message, education)


def education(message):  # –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['F' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–¥–∞':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –¥–µ—Ç–µ–π —É –≤–∞—Å? –ò —Å–∫–æ–ª—å–∫–æ –∏–º –ª–µ—Ç?', reply_markup=markup)
        bot.register_next_step_handler(message, children_old)
    elif message.text.lower() == '–Ω–µ—Ç':
        # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
        fn = 'tablich.xlsx'
        wb = load_workbook(fn)
        ws = wb['data']
        ws['G' + ws['A1'].value] = '-'
        wb.save(fn)
        wb.close()
        ##111
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–°—Ä–µ–¥–Ω–µ–µ')
        btn2 = types.KeyboardButton('–ù–µ–ø–æ–ª–Ω–æ–µ –≤—ã—Å—à–µ–µ')
        btn3 = types.KeyboardButton('–í—ã—Å—à–µ–µ')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è?', reply_markup=markup)
        bot.register_next_step_handler(message, educational_institution)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–î–∞')
        btn2 = types.KeyboardButton('–ù–µ—Ç')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '–ï—Å—Ç—å –ª–∏ —É –≤–∞—Å –¥–µ—Ç–∏?', reply_markup=markup)
        bot.register_next_step_handler(message, education)


def children_old(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['G' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–°—Ä–µ–¥–Ω–µ–µ')
    btn2 = types.KeyboardButton('–ù–µ–ø–æ–ª–Ω–æ–µ –≤—ã—Å—à–µ–µ')
    btn3 = types.KeyboardButton('–í—ã—Å—à–µ–µ')
    markup.add(btn1, btn2, btn3)
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è?', reply_markup=markup)
    bot.register_next_step_handler(message, educational_institution)


def educational_institution(message):  # —É—á–µ–±–Ω–æ–µ –∑–∞–≤–µ–¥–µ–Ω–∏–µ
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['H' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text == '–°—Ä–µ–¥–Ω–µ–µ' or message.text == '–ù–µ–ø–æ–ª–Ω–æ–µ –≤—ã—Å—à–µ–µ' or message.text == '–í—ã—Å—à–µ–µ':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º —É—á–µ–±–Ω–æ–º –∑–∞–≤–µ–¥–µ–Ω–∏–∏ –≤—ã –æ–±—É—á–∞–µ—Ç–µ—Å—å –∏–ª–∏ –æ–±—É—á–∞–ª–∏—Å—å?', reply_markup=markup)
        bot.register_next_step_handler(message, department_and_course)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–°—Ä–µ–¥–Ω–µ–µ')
        btn2 = types.KeyboardButton('–ù–µ–ø–æ–ª–Ω–æ–µ –≤—ã—Å—à–µ–µ')
        btn3 = types.KeyboardButton('–í—ã—Å—à–µ–µ')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –≤–∞—Å —É—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è?', reply_markup=markup)
        bot.register_next_step_handler(message, educational_institution)

def department_and_course(message):  # —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –∏ –∫—É—Ä—Å
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['I' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    markup = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, ' f–ª—å—Ç–µ—Ç–µ –∏ –∫—É—Ä—Å–µ –≤—ã —É—á–∏—Ç–µ—Å—å –∏–ª–∏ —É—á–∏–ª–∏—Å—å?', reply_markup=markup)
    bot.register_next_step_handler(message, work)


def work(message):  # —Ä–∞–±–æ—Ç–∞
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['J' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–î–∞')
    btn2 = types.KeyboardButton('–ù–µ—Ç')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, '–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è?', reply_markup=markup)
    bot.register_next_step_handler(message, Combining_study_and_work)


def Combining_study_and_work(message):  # —Å–æ–≤–º–µ—â–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –∏ —É—á–µ–±—ã
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['K' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–¥–∞':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–ì–¥–µ –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ? –ò –Ω–∞ –∫–∞–∫–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏?', reply_markup=markup)
        bot.register_next_step_handler(message, Job_and_position)
    elif message.text.lower() == '–Ω–µ—Ç':
        # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
        fn = 'tablich.xlsx'
        wb = load_workbook(fn)
        ws = wb['data']
        ws['L' + ws['A1'].value] = '-'
        wb.save(fn)
        wb.close()
        #
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å —Ç—Ä—É–¥–Ω–æ')
        btn2 = types.KeyboardButton('–¢—Ä—É–¥–Ω–æ')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–õ–µ–≥–∫–æ')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –ª–µ–≥–∫–æ')
        btn6 = types.KeyboardButton('–ù–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è —Å–æ–≤–º–µ—â–∞—Ç—å')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
        bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å —Å —Å–æ–≤–º–µ—â–µ–Ω–∏–µ–º —É—á–µ–±—ã –∏ —Ä–∞–±–æ—Ç—ã?', reply_markup=markup)
        bot.register_next_step_handler(message, stress)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–î–∞')
        btn2 = types.KeyboardButton('–ù–µ—Ç')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –≤—ã –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è?', reply_markup=markup)
        bot.register_next_step_handler(message, Combining_study_and_work)


def Job_and_position(message):  # —Ä–∞–±–æ—Ç–∞ –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç—å
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['L' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–û—á–µ–Ω—å —Ç—Ä—É–¥–Ω–æ')
    btn2 = types.KeyboardButton('–¢—Ä—É–¥–Ω–æ')
    btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
    btn4 = types.KeyboardButton('–õ–µ–≥–∫–æ')
    btn5 = types.KeyboardButton('–û—á–µ–Ω—å –ª–µ–≥–∫–æ')
    btn6 = types.KeyboardButton('–ù–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è —Å–æ–≤–º–µ—â–∞—Ç—å')
    markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
    bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å —Å —Å–æ–≤–º–µ—â–µ–Ω–∏–µ–º —É—á–µ–±—ã –∏ —Ä–∞–±–æ—Ç—ã?', reply_markup=markup)
    bot.register_next_step_handler(message, stress)


def stress(message):  # —Å—Ç—Ä–µ—Å—Å
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['M' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–æ—á–µ–Ω—å —Ç—Ä—É–¥–Ω–æ' or message.text.lower() == '—Ç—Ä—É–¥–Ω–æ' or message.text.lower() == '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ' or message.text.lower() == '–ª–µ–≥–∫–æ' or message.text.lower() == '–æ—á–µ–Ω—å –ª–µ–≥–∫–æ' or message.text.lower() == '–Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è —Å–æ–≤–º–µ—â–∞—Ç—å':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ —Å—Ç—Ä–µ—Å—Å?', reply_markup=markup)
        bot.register_next_step_handler(message, Anxiety)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å —Ç—Ä—É–¥–Ω–æ')
        btn2 = types.KeyboardButton('–¢—Ä—É–¥–Ω–æ')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–õ–µ–≥–∫–æ')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –ª–µ–≥–∫–æ')
        btn6 = types.KeyboardButton('–ù–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è —Å–æ–≤–º–µ—â–∞—Ç—å')
        markup.add(btn1, btn2, btn3, btn4, btn5, btn6)
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å —Å —Å–æ–≤–º–µ—â–µ–Ω–∏–µ–º —É—á–µ–±—ã –∏ —Ä–∞–±–æ—Ç—ã?', reply_markup=markup)
        bot.register_next_step_handler(message, stress)


def Anxiety(message):  # —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['N' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–Ω–∏–∫–æ–≥–¥–∞' or message.text.lower() == '—Ä–µ–¥–∫–æ' or message.text.lower() == '–∏–Ω–æ–≥–¥–∞' or message.text.lower() == '—á–∞—Å—Ç–æ' or message.text.lower() == '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ —Ç—Ä–µ–≤–æ–≥—É?', reply_markup=markup)
        bot.register_next_step_handler(message, Depression)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ —Å—Ç—Ä–µ—Å—Å?', reply_markup=markup)
        bot.register_next_step_handler(message, Anxiety)


def Depression(message):  # –¥–µ–ø—Ä–µ—Å—Å–∏—è
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['O' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–Ω–∏–∫–æ–≥–¥–∞' or message.text.lower() == '—Ä–µ–¥–∫–æ' or message.text.lower() == '–∏–Ω–æ–≥–¥–∞' or message.text.lower() == '—á–∞—Å—Ç–æ' or message.text.lower() == '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ó–∞–º–µ—á–∞–ª–∏ –ª–∏ –≤—ã —É —Å–µ–±—è —Å–∏–º–ø—Ç–æ–º—ã –¥–µ–ø—Ä–µ—Å—Å–∏–∏?', reply_markup=markup)
        bot.register_next_step_handler(message, Self_esteem)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ —á–∞—Å—Ç–æ –≤—ã –∏—Å–ø—ã—Ç—ã–≤–∞–µ—Ç–µ —Ç—Ä–µ–≤–æ–≥—É?', reply_markup=markup)
        bot.register_next_step_handler(message, Depression)


def Self_esteem(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['P' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–Ω–∏–∫–æ–≥–¥–∞' or message.text.lower() == '—Ä–µ–¥–∫–æ' or message.text.lower() == '–∏–Ω–æ–≥–¥–∞' or message.text.lower() == '—á–∞—Å—Ç–æ' or message.text.lower() == '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å –Ω–∏–∑–∫–∞—è')
        btn2 = types.KeyboardButton('–ù–∏–∑–∫–∞—è')
        btn3 = types.KeyboardButton('–°—Ä–µ–¥–Ω—è—è')
        btn4 = types.KeyboardButton('–í—ã—Å–æ–∫–∞—è')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Å–≤–æ—é —Å–∞–º–æ–æ—Ü–µ–Ω–∫—É?', reply_markup=markup)
        bot.register_next_step_handler(message, Social_support)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ó–∞–º–µ—á–∞–ª–∏ –ª–∏ –≤—ã —É —Å–µ–±—è —Å–∏–º–ø—Ç–æ–º—ã –¥–µ–ø—Ä–µ—Å—Å–∏–∏?', reply_markup=markup)
        bot.register_next_step_handler(message, Self_esteem)


def Social_support(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['Q' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–æ—á–µ–Ω—å –Ω–∏–∑–∫–∞—è' or message.text.lower() == '–Ω–∏–∑–∫–∞—è' or message.text.lower() == '—Å—Ä–µ–¥–Ω—è—è' or message.text.lower() == '–≤—ã—Å–æ–∫–∞—è' or message.text.lower() == '–æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –ª–∏ –≤—ã –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã —Å–µ–º—å–∏ –∏ –¥—Ä—É–∑–µ–π?', reply_markup=markup)
        bot.register_next_step_handler(message, Satisfaction_with_life)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å –Ω–∏–∑–∫–∞—è')
        btn2 = types.KeyboardButton('–ù–∏–∑–∫–∞—è')
        btn3 = types.KeyboardButton('–°—Ä–µ–¥–Ω—è—è')
        btn4 = types.KeyboardButton('–í—ã—Å–æ–∫–∞—è')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —Å–≤–æ—é —Å–∞–º–æ–æ—Ü–µ–Ω–∫—É?', reply_markup=markup)
        bot.register_next_step_handler(message, Social_support)


def Satisfaction_with_life(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['R' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–Ω–∏–∫–æ–≥–¥–∞' or message.text.lower() == '—Ä–µ–¥–∫–æ' or message.text.lower() == '–∏–Ω–æ–≥–¥–∞' or message.text.lower() == '—á–∞—Å—Ç–æ' or message.text.lower() == '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å –Ω–µ–¥–æ–≤–æ–ª–µ–Ω')
        btn2 = types.KeyboardButton('–ù–µ–¥–æ–≤–æ–ª–µ–Ω')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–î–æ–≤–æ–ª–µ–Ω')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –¥–æ–≤–æ–ª—å–Ω—ã —Å–≤–æ–µ–π –∂–∏–∑–Ω—å—é –≤ —Ü–µ–ª–æ–º? ', reply_markup=markup)
        bot.register_next_step_handler(message, Conflicts)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –ª–∏ –≤—ã –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã —Å–µ–º—å–∏ –∏ –¥—Ä—É–∑–µ–π?', reply_markup=markup)
        bot.register_next_step_handler(message, Satisfaction_with_life)


def Conflicts(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['S' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–æ—á–µ–Ω—å –Ω–µ–¥–æ–≤–æ–ª–µ–Ω' or message.text.lower() == '–Ω–µ–¥–æ–≤–æ–ª–µ–Ω' or message.text.lower() == '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ' or message.text.lower() == '–¥–æ–≤–æ–ª–µ–Ω' or message.text.lower() == '–æ—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ —á–∞—Å—Ç–æ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–∞—é—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º?', reply_markup=markup)
        bot.register_next_step_handler(message, Conflict_resolution)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å –Ω–µ–¥–æ–≤–æ–ª–µ–Ω')
        btn2 = types.KeyboardButton('–ù–µ–¥–æ–≤–æ–ª–µ–Ω')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–î–æ–≤–æ–ª–µ–Ω')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –¥–æ–≤–æ–ª–µ–Ω')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –¥–æ–≤–æ–ª—å–Ω—ã —Å–≤–æ–µ–π –∂–∏–∑–Ω—å—é –≤ —Ü–µ–ª–æ–º? ', reply_markup=markup)
        bot.register_next_step_handler(message, Conflicts)


def Conflict_resolution(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['T' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–Ω–∏–∫–æ–≥–¥–∞' or message.text.lower() == '—Ä–µ–¥–∫–æ' or message.text.lower() == '–∏–Ω–æ–≥–¥–∞' or message.text.lower() == '—á–∞—Å—Ç–æ' or message.text.lower() == '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å —Ç—Ä—É–¥–Ω–æ')
        btn2 = types.KeyboardButton('–¢—Ä—É–¥–Ω–æ')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–õ–µ–≥–∫–æ')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –ª–µ–≥–∫–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ù–∞—Å–∫–æ–ª—å–∫–æ –ª–µ–≥–∫–æ –≤–∞–º —É–¥–∞–µ—Ç—Å—è —Ä–µ—à–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã?', reply_markup=markup)
        bot.register_next_step_handler(message, Trust)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ —á–∞—Å—Ç–æ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–∞—é—Ç –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º?', reply_markup=markup)
        bot.register_next_step_handler(message, Conflict_resolution)


def Trust(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['U' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–æ—á–µ–Ω—å —Ç—Ä—É–¥–Ω–æ' or message.text.lower() == '—Ç—Ä—É–¥–Ω–æ' or message.text.lower() == '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ' or message.text.lower() == '–ª–µ–≥–∫–æ' or message.text.lower() == '–æ—á–µ–Ω—å –ª–µ–≥–∫–æ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–°–æ–≤—Å–µ–º –Ω–µ –¥–æ–≤–µ—Ä—è—é')
        btn2 = types.KeyboardButton('–ù–µ –¥–æ–≤–µ—Ä—è—é')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–î–æ–≤–µ—Ä—è—é')
        btn5 = types.KeyboardButton('–ü–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ–≤–µ—Ä—è—é')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –¥–æ–≤–µ—Ä—è–µ—Ç–µ —Å–≤–æ–µ–º—É –ø–∞—Ä—Ç–Ω–µ—Ä—É?', reply_markup=markup)
        bot.register_next_step_handler(message, Emotional_intimacy)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å —Ç—Ä—É–¥–Ω–æ')
        btn2 = types.KeyboardButton('–¢—Ä—É–¥–Ω–æ')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–õ–µ–≥–∫–æ')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –ª–µ–≥–∫–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ù–∞—Å–∫–æ–ª—å–∫–æ –ª–µ–≥–∫–æ –≤–∞–º —É–¥–∞–µ—Ç—Å—è —Ä–µ—à–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã?', reply_markup=markup)
        bot.register_next_step_handler(message, Trust)


def Emotional_intimacy(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['V' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '—Å–æ–≤—Å–µ–º –Ω–µ –¥–æ–≤–µ—Ä—è—é' or message.text.lower() == '–Ω–µ –¥–æ–≤–µ—Ä—è—é' or message.text.lower() == '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ' or message.text.lower() == '–¥–æ–≤–µ—Ä—è—é' or message.text.lower() == '–ø–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ–≤–µ—Ä—è—é':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å –Ω–∏–∑–∫–∞—è')
        btn2 = types.KeyboardButton('–ù–∏–∑–∫–∞—è')
        btn3 = types.KeyboardButton('–°—Ä–µ–¥–Ω—è—è')
        btn4 = types.KeyboardButton('–í—ã—Å–æ–∫–∞—è')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ –≤–∞—à—É —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –±–ª–∏–∑–æ—Å—Ç—å —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º?',
                         reply_markup=markup)
        bot.register_next_step_handler(message, Time_together)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–°–æ–≤—Å–µ–º –Ω–µ –¥–æ–≤–µ—Ä—è—é')
        btn2 = types.KeyboardButton('–ù–µ –¥–æ–≤–µ—Ä—è—é')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–î–æ–≤–µ—Ä—è—é')
        btn5 = types.KeyboardButton('–ü–æ–ª–Ω–æ—Å—Ç—å—é –¥–æ–≤–µ—Ä—è—é')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –¥–æ–≤–µ—Ä—è–µ—Ç–µ —Å–≤–æ–µ–º—É –ø–∞—Ä—Ç–Ω–µ—Ä—É?', reply_markup=markup)
        bot.register_next_step_handler(message, Emotional_intimacy)


def Time_together(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['W' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–æ—á–µ–Ω—å –Ω–∏–∑–∫–∞—è' or message.text.lower() == '–Ω–∏–∑–∫–∞—è' or message.text.lower() == '—Å—Ä–µ–¥–Ω—è—è' or message.text.lower() == '–≤—ã—Å–æ–∫–∞—è' or message.text.lower() == '–æ—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ú–µ–Ω—å—à–µ 1 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn2 = types.KeyboardButton('1-2 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn3 = types.KeyboardButton('3-4 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn4 = types.KeyboardButton('–±–æ–ª–µ–µ 4 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –≤–º–µ—Å—Ç–µ —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º?', reply_markup=markup)
        bot.register_next_step_handler(message, Roles_in_the_family)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å –Ω–∏–∑–∫–∞—è')
        btn2 = types.KeyboardButton('–ù–∏–∑–∫–∞—è')
        btn3 = types.KeyboardButton('–°—Ä–µ–¥–Ω—è—è')
        btn4 = types.KeyboardButton('–í—ã—Å–æ–∫–∞—è')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ –≤–∞—à—É —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –±–ª–∏–∑–æ—Å—Ç—å —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º?',
                         reply_markup=markup)
        bot.register_next_step_handler(message, Time_together)


def Roles_in_the_family(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['X' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–º–µ–Ω—å—à–µ 1 —á–∞—Å–∞ –≤ –¥–µ–Ω—å' or message.text.lower() == '1-2 —á–∞—Å–∞ –≤ –¥–µ–Ω—å' or message.text.lower() == '3-4 —á–∞—Å–∞ –≤ –¥–µ–Ω—å' or message.text.lower() == '–±–æ–ª–µ–µ 4 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ')
        btn2 = types.KeyboardButton('–ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ, –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π —É –º–µ–Ω—è')
        btn3 = types.KeyboardButton('–ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ, –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π —É –ø–∞—Ä—Ç–Ω–µ—Ä–∞')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç–µ —Ä–æ–ª–∏ –∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–º—å–µ?', reply_markup=markup)
        if ws['D' + ws['A1'].value].value == '–ü–ª–∞–Ω–∏—Ä—É—é –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫':
            bot.register_next_step_handler(message, Motivation_for_marriage)
        else:
            bot.register_next_step_handler(message, Financial_stability)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ú–µ–Ω—å—à–µ 1 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn2 = types.KeyboardButton('1-2 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn3 = types.KeyboardButton('3-4 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn4 = types.KeyboardButton('–±–æ–ª–µ–µ 4 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –≤–º–µ—Å—Ç–µ —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º?', reply_markup=markup)
        bot.register_next_step_handler(message, Roles_in_the_family)


# –†–∞–∑–¥–µ–ª 5: –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –±—Ä–∞–∫—É (–¥–ª—è —Ç–µ—Ö, –∫—Ç–æ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫)
def Motivation_for_marriage(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['Y' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ' or message.text.lower() == '–Ω–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ, –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π —É –º–µ–Ω—è' or message.text.lower() == '–Ω–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ, –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π —É –ø–∞—Ä—Ç–Ω–µ—Ä–∞':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–õ—é–±–æ–≤—å')
        btn2 = types.KeyboardButton('–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–æ—Ä–º—ã')
        btn3 = types.KeyboardButton('–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞')
        btn4 = types.KeyboardButton('–î—Ä—É–≥–∏–µ –ø—Ä–∏—á–∏–Ω—ã')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, '–ü–æ—á–µ–º—É –≤—ã —Ä–µ—à–∏–ª–∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫? ', reply_markup=markup)
        bot.register_next_step_handler(message, Expectations_of_marriage)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ')
        btn2 = types.KeyboardButton('–ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ, –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π —É –º–µ–Ω—è')
        btn3 = types.KeyboardButton('–ù–µ—Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ, –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π —É –ø–∞—Ä—Ç–Ω–µ—Ä–∞')
        markup.add(btn1, btn2, btn3)
        bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ—Ç–µ —Ä–æ–ª–∏ –∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–µ–º—å–µ?', reply_markup=markup)
        bot.register_next_step_handler(message, Motivation_for_marriage)


def Expectations_of_marriage(message):
    if message.text.lower() == '–ª—é–±–æ–≤—å' or message.text.lower() == '—Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–æ—Ä–º—ã' or message.text.lower() == '–º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞':
        # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
        fn = 'tablich.xlsx'
        wb = load_workbook(fn)
        ws = wb['data']
        ws['Z' + ws['A1'].value] = message.text
        wb.save(fn)
        wb.close()
        #
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–≤—ã –≤–∞—à–∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç –±—Ä–∞–∫–∞?', reply_markup=markup)
        bot.register_next_step_handler(message, Partner_support)
    elif message.text.lower() == '–¥—Ä—É–≥–∏–µ –ø—Ä–∏—á–∏–Ω—ã':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–ö–∞–∫–∏–µ –ø—Ä–∏—á–∏–Ω—ã?', reply_markup=markup)
        bot.register_next_step_handler(message, Expectations_of_marriage1)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–õ—é–±–æ–≤—å')
        btn2 = types.KeyboardButton('–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–æ—Ä–º—ã')
        btn3 = types.KeyboardButton('–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞')
        btn4 = types.KeyboardButton('–î—Ä—É–≥–∏–µ –ø—Ä–∏—á–∏–Ω—ã')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, '–ü–æ—á–µ–º—É –≤—ã —Ä–µ—à–∏–ª–∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫? ', reply_markup=markup)
        bot.register_next_step_handler(message, Expectations_of_marriage)


def Expectations_of_marriage1(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['Z' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    markup = types.ReplyKeyboardRemove()
    bot.send_message(message.chat.id, '–ö–∞–∫–æ–≤—ã –≤–∞—à–∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç –±—Ä–∞–∫–∞?', reply_markup=markup)
    bot.register_next_step_handler(message, Partner_support)


def Partner_support(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AA' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    markup = types.ReplyKeyboardMarkup()
    btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
    btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
    btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
    btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
    btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
    markup.add(btn1, btn2, btn3, btn4, btn5)
    bot.send_message(message.chat.id, '–ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –ª–∏ –≤—ã –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –≤ —Ä–µ—à–µ–Ω–∏–∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫? ',
                     reply_markup=markup)
    bot.register_next_step_handler(message, Readiness_for_responsibility)


def Readiness_for_responsibility(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AB' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–Ω–∏–∫–æ–≥–¥–∞' or message.text.lower() == '—Ä–µ–¥–∫–æ' or message.text.lower() == '–∏–Ω–æ–≥–¥–∞' or message.text.lower() == '—á–∞—Å—Ç–æ' or message.text.lower() == '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–°–æ–≤—Å–µ–º –Ω–µ –≥–æ—Ç–æ–≤')
        btn2 = types.KeyboardButton('–ù–µ –≥–æ—Ç–æ–≤')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–ì–æ—Ç–æ–≤')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –≥–æ—Ç–æ–≤')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –≥–æ—Ç–æ–≤—ã –≤–∑—è—Ç—å –Ω–∞ —Å–µ–±—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–µ–º–µ–π–Ω—É—é –∂–∏–∑–Ω—å? ',
                         reply_markup=markup)
        bot.register_next_step_handler(message, Joint_future)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ß—É–≤—Å—Ç–≤—É–µ—Ç–µ –ª–∏ –≤—ã –ø–æ–¥–¥–µ—Ä–∂–∫—É –æ—Ç –≤–∞—à–µ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –≤ —Ä–µ—à–µ–Ω–∏–∏ –≤—Å—Ç—É–ø–∏—Ç—å –≤ –±—Ä–∞–∫? ',
                         reply_markup=markup)
        bot.register_next_step_handler(message, Readiness_for_responsibility)


def Joint_future(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AC' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '—Å–æ–≤—Å–µ–º –Ω–µ –≥–æ—Ç–æ–≤' or message.text.lower() == '–Ω–µ –≥–æ—Ç–æ–≤' or message.text.lower() == '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ' or message.text.lower() == '–≥–æ—Ç–æ–≤' or message.text.lower() == '–æ—á–µ–Ω—å –≥–æ—Ç–æ–≤':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–û–±—Å—É–∂–¥–∞–ª–∏ –ª–∏ –≤—ã —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –ø–ª–∞–Ω—ã –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ –±—É–¥—É—â–µ–µ?',
                         reply_markup=markup)
        bot.register_next_step_handler(message, Financial_stability)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–°–æ–≤—Å–µ–º –Ω–µ –≥–æ—Ç–æ–≤')
        btn2 = types.KeyboardButton('–ù–µ –≥–æ—Ç–æ–≤')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–ì–æ—Ç–æ–≤')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –≥–æ—Ç–æ–≤')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ù–∞—Å–∫–æ–ª—å–∫–æ –≤—ã –≥–æ—Ç–æ–≤—ã –≤–∑—è—Ç—å –Ω–∞ —Å–µ–±—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∑–∞ —Å–µ–º–µ–π–Ω—É—é –∂–∏–∑–Ω—å? ',
                         reply_markup=markup)
        bot.register_next_step_handler(message, Joint_future)


def Financial_stability(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AD' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–Ω–∏–∫–æ–≥–¥–∞' or message.text.lower() == '—Ä–µ–¥–∫–æ' or message.text.lower() == '–∏–Ω–æ–≥–¥–∞' or message.text.lower() == '—á–∞—Å—Ç–æ' or message.text.lower() == '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ')
        btn2 = types.KeyboardButton('–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ')
        btn3 = types.KeyboardButton('–°—Ä–µ–¥–Ω–µ–µ')
        btn4 = types.KeyboardButton('–°—Ç–∞–±–∏–ª—å–Ω–æ–µ')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ? ', reply_markup=markup)
        bot.register_next_step_handler(message, Joint_budget)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–û–±—Å—É–∂–¥–∞–ª–∏ –ª–∏ –≤—ã —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º –ø–ª–∞–Ω—ã –Ω–∞ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–µ –±—É–¥—É—â–µ–µ?',
                         reply_markup=markup)
        bot.register_next_step_handler(message, Financial_stability)


def Joint_budget(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AE' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–æ—á–µ–Ω—å –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ' or message.text.lower() == '–Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ' or message.text.lower() == '—Å—Ä–µ–¥–Ω–µ–µ' or message.text.lower() == '—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ' or message.text.lower() == '–æ—á–µ–Ω—å —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–î–∞')
        btn2 = types.KeyboardButton('–ù–µ—Ç')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '–í–µ–¥–µ—Ç–µ –ª–∏ –≤—ã —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π –±—é–¥–∂–µ—Ç —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º?', reply_markup=markup)
        bot.register_next_step_handler(message, Financial_conflicts)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–û—á–µ–Ω—å –Ω–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ')
        btn2 = types.KeyboardButton('–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–æ–µ')
        btn3 = types.KeyboardButton('–°—Ä–µ–¥–Ω–µ–µ')
        btn4 = types.KeyboardButton('–°—Ç–∞–±–∏–ª—å–Ω–æ–µ')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ –≤–∞—à–µ —Ç–µ–∫—É—â–µ–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ? ', reply_markup=markup)
        bot.register_next_step_handler(message, Joint_budget)


def Financial_conflicts(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AF' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–¥–∞' or message.text.lower() == '–Ω–µ—Ç':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–∞—é—Ç –ª–∏ —É –≤–∞—Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏–∑-–∑–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤?', reply_markup=markup)
        bot.register_next_step_handler(message, Personal_time)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–î–∞')
        btn2 = types.KeyboardButton('–ù–µ—Ç')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '–í–µ–¥–µ—Ç–µ –ª–∏ –≤—ã —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π –±—é–¥–∂–µ—Ç —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º?', reply_markup=markup)
        bot.register_next_step_handler(message, Financial_conflicts)


def Personal_time(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AG' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–Ω–∏–∫–æ–≥–¥–∞' or message.text.lower() == '—Ä–µ–¥–∫–æ' or message.text.lower() == '–∏–Ω–æ–≥–¥–∞' or message.text.lower() == '—á–∞—Å—Ç–æ' or message.text.lower() == '–ø–æ—Å—Ç–æ—è–Ω–Ω–æ':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ú–µ–Ω—å—à–µ 1 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn2 = types.KeyboardButton('1-2 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn3 = types.KeyboardButton('3-4 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn4 = types.KeyboardButton('–±–æ–ª–µ–µ 4 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã —É–¥–µ–ª—è–µ—Ç–µ –ª–∏—á–Ω—ã–º —É–≤–ª–µ—á–µ–Ω–∏—è–º –∏ —Ö–æ–±–±–∏?', reply_markup=markup)
        bot.register_next_step_handler(message, Skills_development)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ù–∏–∫–æ–≥–¥–∞')
        btn2 = types.KeyboardButton('–†–µ–¥–∫–æ')
        btn3 = types.KeyboardButton('–ò–Ω–æ–≥–¥–∞')
        btn4 = types.KeyboardButton('–ß–∞—Å—Ç–æ')
        btn5 = types.KeyboardButton('–ü–æ—Å—Ç–æ—è–Ω–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–í–æ–∑–Ω–∏–∫–∞—é—Ç –ª–∏ —É –≤–∞—Å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –∏–∑-–∑–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤?', reply_markup=markup)
        bot.register_next_step_handler(message, Personal_time)


def Skills_development(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AH' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '–º–µ–Ω—å—à–µ 1 —á–∞—Å–∞ –≤ –¥–µ–Ω—å' or message.text.lower() == '1-2 —á–∞—Å–∞ –≤ –¥–µ–Ω—å' or message.text.lower() == '3-4 —á–∞—Å–∞ –≤ –¥–µ–Ω—å' or message.text.lower() == '–±–æ–ª–µ–µ 4 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å':
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–°–æ–≤—Å–µ–º –Ω–µ –≤–∞–∂–Ω–æ')
        btn2 = types.KeyboardButton('–ù–µ –≤–∞–∂–Ω–æ')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–í–∞–∂–Ω–æ')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –≤–∞–∂–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ù–∞—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω–æ –¥–ª—è –≤–∞—Å —Ä–∞–∑–≤–∏—Ç–∏–µ –ª–∏—á–Ω—ã—Ö –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤',
                         reply_markup=markup)
        bot.register_next_step_handler(message, Comments)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–ú–µ–Ω—å—à–µ 1 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn2 = types.KeyboardButton('1-2 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn3 = types.KeyboardButton('3-4 —á–∞—Å–∞ –≤ –¥–µ–Ω—å')
        btn4 = types.KeyboardButton('–±–æ–ª–µ–µ 4 —á–∞—Å–æ–≤ –≤ –¥–µ–Ω—å')
        markup.add(btn1, btn2, btn3, btn4)
        bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã —É–¥–µ–ª—è–µ—Ç–µ –ª–∏—á–Ω—ã–º —É–≤–ª–µ—á–µ–Ω–∏—è–º –∏ —Ö–æ–±–±–∏?', reply_markup=markup)
        bot.register_next_step_handler(message, Skills_development)


def Comments(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AI' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    if message.text.lower() == '—Å–æ–≤—Å–µ–º –Ω–µ –≤–∞–∂–Ω–æ' or message.text.lower() == '–Ω–µ –≤–∞–∂–Ω–æ' or message.text.lower() == '–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ' or message.text.lower() == '–≤–∞–∂–Ω–æ' or message.text.lower() == '–æ—á–µ–Ω—å –≤–∞–∂–Ω–æ':
        markup = types.ReplyKeyboardRemove()
        bot.send_message(message.chat.id, '–ö–∞–∫–æ–≤—ã –≤–∞—à–∏ –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç –≤–∞—à–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º?',
                         reply_markup=markup)
        bot.register_next_step_handler(message, end)
    else:
        markup = types.ReplyKeyboardMarkup()
        btn1 = types.KeyboardButton('–°–æ–≤—Å–µ–º –Ω–µ –≤–∞–∂–Ω–æ')
        btn2 = types.KeyboardButton('–ù–µ –≤–∞–∂–Ω–æ')
        btn3 = types.KeyboardButton('–ù–µ–π—Ç—Ä–∞–ª—å–Ω–æ')
        btn4 = types.KeyboardButton('–í–∞–∂–Ω–æ')
        btn5 = types.KeyboardButton('–û—á–µ–Ω—å –≤–∞–∂–Ω–æ')
        markup.add(btn1, btn2, btn3, btn4, btn5)
        bot.send_message(message.chat.id, '–ù–∞—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω–æ –¥–ª—è –≤–∞—Å —Ä–∞–∑–≤–∏—Ç–∏–µ –ª–∏—á–Ω—ã—Ö –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤',
                         reply_markup=markup)
        bot.register_next_step_handler(message, Comments)



def end(message):
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AJ' + ws['A1'].value] = message.text
    wb.save(fn)
    wb.close()
    #
    # –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    fn = 'tablich.xlsx'
    wb = load_workbook(fn)
    ws = wb['data']
    ws['AK' + ws['A1'].value] = '@' + message.from_user.username
    wb.save(fn)
    wb.close()
    #
    markup = types.ReplyKeyboardRemove()
    bot.send_message(message.from_user.id, f'–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –∫ –Ω–∞—à–µ–º—É —á–∞—Ç-–±–æ—Ç—É –≤ Telegram! üë©',
    f'‚Äç‚öïÔ∏è–ù–∞—à–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ –≤–∞—à–∏—Ö –±—Ä–∞—á–Ω–æ-—Å–µ–º–µ–π–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö –∏ –Ω–∞–π—Ç–∏ –ø—É—Ç–∏ –∫ –∏—Ö —É–ª—É—á—à–µ–Ω–∏—é.',
    f'–ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏ –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏ ‚Äî –º—ã –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤–∞—Åü´Ç–ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –∫ –±–æ–ª–µ–µ –∑–¥–æ—Ä–æ–≤—ã–º –∏ —Å—á–∞—Å—Ç–ª–∏–≤—ã–º –æ—Ç–Ω–æ—à–µ–Ω–∏—è–º —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!',
    f'–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ @Fam_Helper, –¥–æ–±–∞–≤–ª—è–π—Ç–µ—Å—å –≤ —á–∞—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ —Å –Ω–∞—à–∏–º–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏. –í–º–µ—Å—Ç–µ –º—ã —Å–º–æ–∂–µ–º –¥–æ–±–∏—Ç—å—Å—è –±–æ–ª—å—à–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–πüì©', reply_markup=markup)


bot.polling(non_stop=True, interval=0)